/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
 
 //ITERATIVE APPROACH
 
class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode dummy=new ListNode(-1);
        ListNode list3=dummy;
        
        while(list1!=null && list2!=null)
        {
            if(list1.val<list2.val)
            {
                list3.next=list1;
                list1=list1.next;
            }
            else
            {
                list3.next=list2;
                list2=list2.next;
            }
            list3=list3.next;
        }
        list3.next=list1==null ? list2 : list1;
        return dummy.next;
    }
}

//RECURSIVE APPROACH:

class Solution {
    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {
        ListNode res;
        if(list1==null)
            return list2;
        if(list2==null)
            return list1;
        if(list1.val<list2.val)
        {
            res=list1;
            res.next=mergeTwoLists(list1.next, list2);
        }
        else
        {
            res=list2;
            res.next=mergeTwoLists(list1, list2.next);
        }
        return res;
    }
}
